<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">


    <security:http security="none" pattern="/login.html"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>


    <security:http auto-config="true" use-expressions="true">
        <!--
        intercept-url：定义一个拦截规则
        pattern：对哪些url进行权限控制 /**拦截所以请求
        access：在请求对应的URL时需要什么权限，默认配置时它应该是一个以逗号分隔的角色列
        表，
        请求的用户只需拥有其中的一个角色就能成功访问对应的URL
        -->
        <security:intercept-url pattern="/pages/1.html" access="isAuthenticated()"/>
        <security:intercept-url pattern="/pages/2.html" access="hasAuthority('add')"/>
        <security:intercept-url pattern="/pages/3.html" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
        <security:form-login login-page="/login.html" username-parameter="username" password-parameter="password"
                             login-processing-url="/login.do" authentication-failure-url="/login.html"
                             default-target-url="/index.html"/>
        <security:csrf disabled="true"></security:csrf>
        <security:logout logout-url="login.html" invalidate-session="true" logout-success-url="index.html"/>
    </security:http>
    <!--
    authentication-manager：认证管理器，用于处理认证操作
    -->
    <security:authentication-manager>
        <!--
        authentication-provider：认证提供者，执行具体的认证逻辑
        -->
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"/>
            <!--
            user-service：用于获取用户信息，提供给authentication-provider进行认证
            -->
            <!--<security:user-service>-->
            <!--
            user：定义用户信息，可以指定用户名、密码、角色，后期可以改为从数据库查询
            用户信息
            {noop}：表示当前使用的密码为明文
            -->
            <!--<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"></security:user>-->
            <!--</security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>
    <bean id="userService" class="com.test.UserService"/>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="com.test"/>
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>